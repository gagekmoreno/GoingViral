import ntpath

## parameters ##
# expects demultiplexed FASTQ
ONT_FASTQ = config['ont_fastq_gz']
ONT_BASENAME = ntpath.basename(ONT_FASTQ).replace('.fastq.gz', '')

# reference databases
REAGENT_DB = config['reagent_db']
HOST_RNA_DB = config['host_rna_db']
HOST_DNA_DB = config['host_dna_db']

## shell strings ##
# some of the same strings are used to run commands with different inputs and outputs
# save these strings here

# map reads to reference with minimap2
# input[0] is reference sequence
# input[1] is ONT reads
# output[0] is SAM file generated by minimap2 with all reads
MAP_READS_CMD = 'minimap2 \
-ax map-ont \
{input[0]} \
{input[1]} \
-t 32 \
-o {output[0]}'

# filter SAM file and return unmapped ONT reads
# these are reads that do not match reagent or host databases
# input[0] is reference sequence
# input[1] is SAM file generated by minimap2
# output[0] is FASTQ file with unmapped reads
FILTER_UNMAPPED_CMD = 'samtools \
fastq -f 4 \
--reference {input[0]} \
-1 {output[0]} -2 {output[0]} -0 {output[0]} -s {output[0]} -n \
{input[1]}'

## rules

rule all:
    input:
        'cleaned/' + ONT_BASENAME + '.clean.fastq.gz'

rule remove_reagent:
    '''remove sequences matching known reagent contaminants'''
    input:
        REAGENT_DB,
        ONT_FASTQ
    output:
        temp('tmp/' + ONT_BASENAME + '/' + 'reagent.aln.sam')
    run:
        shell(MAP_READS_CMD)

rule filter_unmapped_reagent:
    '''make FASTQ file of sequences that do not match reagent DB'''
    input:
        REAGENT_DB,
        'tmp/' + ONT_BASENAME + '/' + 'reagent.aln.sam'
    output:
        temp('tmp/' + ONT_BASENAME + '/' + 'reagent.fastq')
    run:
        shell(FILTER_UNMAPPED_CMD)

rule remove_host_rna:
    '''remove sequences matching host RNA transcripts'''
    input:
        HOST_RNA_DB,
        'tmp/' + ONT_BASENAME + '/' + 'reagent.fastq'
    output:
        temp('tmp/' + ONT_BASENAME + '/' + 'rna.aln.sam')
    run:
        shell(MAP_READS_CMD)

rule filter_unmapped_rna:
    '''make FASTQ file of sequences that do not match host RNA transcripts'''
    input:
        HOST_RNA_DB,
        'tmp/' + ONT_BASENAME + '/' + 'rna.aln.sam'
    output:
        temp('tmp/' + ONT_BASENAME + '/' + 'rna.fastq')
    run:
        shell(FILTER_UNMAPPED_CMD)

rule remove_host_dna:
    '''remove sequences matching host DNA transcripts'''
    input:
        HOST_DNA_DB,
        'tmp/' + ONT_BASENAME + '/' + 'rna.fastq'
    output:
        temp('tmp/' + ONT_BASENAME + '/' + 'dna.aln.sam')
    run:
        shell(MAP_READS_CMD)

rule filter_unmapped_dna:
    '''make FASTQ file of sequences that do not match host DNA transcripts'''
    input:
        HOST_DNA_DB,
        'tmp/' + ONT_BASENAME + '/' + 'dna.aln.sam'
    output:
        temp('tmp/' + ONT_BASENAME + '/' + 'dna.fastq')
    run:
        shell(FILTER_UNMAPPED_CMD)

rule compress_output:
    '''gzip compress output FASTQ file'''
    input:
        'tmp/' + ONT_BASENAME + '/' + 'dna.fastq'
    output:
        'cleaned/' + ONT_BASENAME + '.clean.fastq.gz'
    run:
        shell('gzip -c {input[0]} > {output[0]}')